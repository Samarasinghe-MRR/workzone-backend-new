// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                  @id @default(uuid())
  authUserId             String                  @unique // Link to Auth Service User.id
  firstName              String
  lastName               String
  email                  String                  @unique
  phone                  String                  @unique
  isVerified             Boolean                 @default(false)
  role                   Role                    @relation(fields: [roleId], references: [id])
  roleId                 String
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  isActive               Boolean                 @default(true)
  passwordLastChanged    DateTime?
  serviceProviderProfile ServiceProviderProfile?
  customerProfile        CustomerProfile?
  adminProfile           AdminProfile?
}

model Role {
  id    String @id @default(uuid())
  name  String @unique // Make name unique for easier lookups
  users User[]
}

model ServiceProviderProfile {
  id              String   @id @default(uuid())
  userId          String   @unique
  category        String
  experienceYears Int
  location        String
  latitude        Float // new
  longitude       Float // new
  rating          Float    @default(0)
  availability    Boolean  @default(true)
  createdAt       DateTime @default(now())
  user            User     @relation(fields: [userId], references: [id])
}

model CustomerProfile {
  id        String   @id @default(uuid())
  userId    String   @unique
  address   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model AdminProfile {
  id        String   @id @default(uuid())
  userId    String   @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
